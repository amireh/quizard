{"version":3,"sources":["webpack:///webpack/bootstrap 527fbb50d17822503724","webpack:////home/kandie/Workspace/Projects/Quizard/recipes/take_quiz/main.js","webpack:////home/kandie/Workspace/Projects/Quizard/recipes/take_quiz/models/quiz.js","webpack:///external \"pixy\"","webpack:////home/kandie/Workspace/Projects/Quizard/recipes/take_quiz/models/quiz_question.js","webpack:///./models/quiz.js","webpack:///external \"underscore\"","webpack:///./constants.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wC;;;;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;;AAEA,yB;;;;;;;;;ACdA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA,IAAG;;;AAGH;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,C;;;;;;;;;AClCD,uB;;;;;;;;;mCCAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,oBAAoB;AACzD;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA,yBAAwB,gBAAgB;;AAExC;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,IAAG;;AAEH;AACA,EAAC,uJ;;;;;;;;;mCCtOD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH,EAAC,uJ;;;;;;;;;ACjCD,6B;;;;;;;;;igJ","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/recipes/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 527fbb50d17822503724\n **/","var Quiz = require('./models/quiz');\n\nvar routeMap = function(match) {\n  match('/recipes/take_quiz').to('takeQuizRecipe');\n  match('/courses/:course_id').to('course', function(match) {\n    match('/quizzes/:quiz_id').to('quiz', function(match) {\n      match('/').to('quizShow');\n      match('/take').to('takeQuiz');\n    });\n  });\n};\n\nvar Recipe = function() {};\n\nmodule.exports = Recipe;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/kandie/Workspace/Projects/Quizard/recipes/take_quiz/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Pixy = require('pixy');\nvar BaseQuiz = require('models/quiz');\nvar QuizQuestion = require('./quiz_question');\nvar Collection = Pixy.Collection;\n\nvar Quiz = BaseQuiz.extend({\n  initialize: function() {\n    var quiz = this;\n\n    this.questions = new Collection([], {\n      comparator: function(model) {\n        return model.get('position');\n      },\n\n      url: function() {\n        return quiz.url() + '/questions?page=' + (this.meta.currentPage || 1);\n      },\n\n      model: QuizQuestion\n    });\n\n    return BaseQuiz.prototype.initialize.apply(this, arguments);\n  },\n\n\n  toProps: function() {\n    var props = BaseQuiz.prototype.toProps.call(this);\n\n    props.questions = this.questions.toProps().filter(function(question) {\n      return question.type !== 'text_only_question';\n    });\n\n    return props;\n  }\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/kandie/Workspace/Projects/Quizard/recipes/take_quiz/models/quiz.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = pixy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"pixy\"\n ** module id = 2\n ** module chunks = 0\n **/","define(function(require) {\n  var Pixy = require('pixy');\n  var K = require('constants');\n  var _ = require('underscore');\n  var pluck = _.pluck;\n  var where = _.where;\n  var uniq = _.uniq;\n  var extend = _.extend;\n  var contains = _.contains;\n  var uniqueId = _.uniqueId;\n  var remove = _.remove;\n  var sample = _.sample;\n  var I = function() {};\n\n  var AnswerDecorators = {\n    numericalQuestion: function(answer) {\n      var type = answer.numerical_answer_type || 'auto';\n\n      if (type === K.QUESTION_NUMERICAL_EXACT_ANSWER) {\n        answer.text = answer.exact;\n      }\n      else if (type === K.QUESTION_NUMERICAL_RANGE_ANSWER) {\n        answer.text = answer.start + '..' + answer.end;\n      }\n\n      delete answer.numerical_answer_type;\n      answer.type = type;\n    },\n    // We gon' trick the answer picker into treating this just like a numerical\n    // question by extracing the number found in the \"answer\" property, and\n    // renaming it to \"exact\" so it gets treated the same way\n    calculatedQuestion: function(answer) {\n      if (answer.answer) {\n        answer.type = K.QUESTION_NUMERICAL_EXACT_ANSWER;\n        answer.text = answer.exact = answer.answer;\n      } else {\n        answer.type = 'auto';\n      }\n    },\n\n    matchingQuestion: function(answer) {\n      answer.matchId = ''+answer.match_id;\n      delete answer.right;\n      delete answer.match_id;\n    }\n  };\n\n  var extractBlanks = function(answers) {\n    return uniq(pluck(answers, 'blank_id'));\n  };\n\n  var mkUnknownAnswer = function(id, attrs) {\n    return extend({\n      id: [ K.QUESTION_UNKNOWN_ANSWER, id ].join('_'),\n      text: K.QUESTION_UNKNOWN_ANSWER_TEXT,\n      unknown: true\n    }, attrs);\n  };\n\n  var mkMissingAnswer = function(id, attrs) {\n    return extend({\n      id: [ K.QUESTION_MISSING_ANSWER, id ].join('_'),\n      text: K.QUESTION_MISSING_ANSWER_TEXT,\n      missing: true\n    }, attrs);\n  };\n\n  var buildVariant = function() {\n    return {\n      id: uniqueId(),\n      responseRatio: 0,\n      remainingRespondents: 0,\n      answerIds: []\n    };\n  };\n\n  var QuizQuestion = Pixy.Model.extend({\n    name: 'QuizQuestion',\n\n    urlRoot: function() {\n      return this.collection.url(true);\n    },\n\n    parse: function(payload) {\n      var attrs = {};\n      var id = ''+payload.id;\n      var type = payload.question_type;\n      var answers = payload.answers || [];\n      var answerSets = [];\n      var answerDecorator = I;\n\n      if (type) {\n        answerDecorator = AnswerDecorators[type.camelize(true)] || I;\n      }\n\n      // Wrap all answers in \"answerSets\" to normalize access between\n      // question types that have multiple sets (like blanks) and those that\n      // don't\n      if (contains(K.QUESTIONS_WITH_ANSWER_SETS, type)) {\n        answerSets = extractBlanks(answers).map(function(blankId) {\n          return {\n            id: blankId,\n            answers: where(answers, { blank_id: blankId })\n          };\n        });\n      } else {\n        answerSets.push({\n          id: 'auto',\n          answers: answers\n        });\n      }\n\n      // Generate answers for students who should skip the question, and those\n      // who should answer randomly for free-form input questions\n      if (contains(K.FREE_FORM_INPUT_QUESTIONS, type)) {\n        answerSets.forEach(function(set) {\n          set.answers.push(mkUnknownAnswer(id + '_' + set.id));\n        });\n      }\n\n      // Now we stringify ids and decorate answers\n      answerSets.forEach(function(set) {\n        var responseRatioDistributed = false;\n\n        set.answers.push(mkMissingAnswer(id + '_' + set.id));\n        set.answers.forEach(function(answer) {\n          answer.id = ''+answer.id;\n          answer.correct = answer.weight === 100;\n          answer.remainingRespondents = 0;\n          answer.responseRatio = 0;\n\n          if (answer.correct && !responseRatioDistributed) {\n            responseRatioDistributed = true;\n            answer.responseRatio = 100;\n          }\n\n          delete answer.weight;\n          delete answer.comments;\n          delete answer.html;\n\n          answerDecorator(answer);\n        });\n\n        // If the question does not have a correct answer, e.g Essay, then\n        // choose an answer at random and give it the initial response ratio\n        if (!responseRatioDistributed && set.answers.length) {\n          sample(set.answers).responseRatio = 100;\n        }\n      });\n\n      attrs.id = id;\n      attrs.type = payload.question_type;\n      attrs.text = payload.question_text;\n      attrs.answerType = 'random';\n      attrs.answerSets = answerSets;\n      attrs.autoGradable = contains(K.MANUALLY_GRADED_QUESTIONS, type);\n      attrs.pointsPossible = payload.points_possible;\n\n      if (contains(K.QUESTIONS_WITH_VARIANTS, type)) {\n        // Start out with a default empty variant\n        attrs.variants = [ buildVariant() ];\n        attrs.variants[0].responseRatio = 100;\n\n        remove(attrs.answerSets[0].answers, {\n          id: [ K.QUESTION_MISSING_ANSWER, id, 'auto' ].join('_')\n        });\n      }\n\n      if (type === 'matching_question') {\n        attrs.matches = payload.matches.map(function(match) {\n          return {\n            id: ''+match.match_id,\n            text: match.text\n          };\n        }).concat(mkMissingAnswer(id));\n      }\n\n      return attrs;\n    },\n\n    toProps: function() {\n      var props = this.pick([\n        'id',\n        'type',\n        'text',\n        'answerType',\n        'answerSets',\n        'variants',\n        'position',\n        'matches'\n      ]);\n\n      // which is basically everything.. duh\n\n      return props;\n    },\n\n    addVariant: function() {\n      this.get('variants').push(buildVariant());\n    },\n\n    removeVariant: function(variantId) {\n      var variants = this.get('variants');\n\n      if (variants.length === 1) {\n        return false;\n      }\n\n      remove(variants, { id: variantId });\n\n      if (variants.length === 1) {\n        variants[0].responseRatio = 100;\n      }\n\n      this.set('variants', variants);\n    },\n\n    getResponsePool: function() {\n      if (contains(K.QUESTIONS_WITH_VARIANTS, this.get('type'))) {\n        return this.get('variants');\n      }\n      else {\n        return this.get('answerSets').reduce(function(answers, set) {\n          return answers.concat(set.answers);\n        }, []);\n      }\n    }\n  });\n\n  return QuizQuestion;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** /home/kandie/Workspace/Projects/Quizard/recipes/take_quiz/models/quiz_question.js\n ** module id = 3\n ** module chunks = 0\n **/","define(function(require) {\n  var Pixy = require('pixy');\n  var Model = Pixy.Model;\n\n  /**\n   * @class Models.Quiz\n   */\n  return Model.extend({\n    name: 'Quiz',\n\n    urlRoot: function() {\n      return this.collection.url(true);\n    },\n\n    parse: function(payload) {\n      if (payload.title) {\n        payload.name = payload.title;\n        delete payload.title;\n      }\n\n      return payload;\n    },\n\n    toProps: function() {\n      var props = {};\n\n      props.id = this.get('id') + '';\n      props.name = this.get('name');\n      props.url = this.url();\n\n      return props;\n    }\n  });\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./models/quiz.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = underscore;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 5\n ** module chunks = 0\n **/","define([], function() {\n  return {\n    MODEL_EVENTS: 'change sync',\n    COLLECTION_EVENTS: 'add change remove reset fetch',\n\n    ACCESS_POLICY_PUBLIC: 'public',\n    ACCESS_POLICY_PRIVATE: 'private',\n\n    APP_PRIMARY_LAYER: 'APP_PRIMARY_LAYER',\n    APP_SECONDARY_LAYER: 'APP_SECONDARY_LAYER',\n    APP_TRACK_ROUTE: 'APP_TRACK_ROUTE',\n\n    ERROR_ACCESS_UNAUTHORIZED: 'Unauthorized',\n    ERROR_ACCESS_OVERAUTHORIZED: 'Overauthorized',\n    ERROR_NOT_FOUND: 'NOT_FOUND',\n\n    ACCOUNT_REQUIRED: 'ACCOUNT_REQUIRED',\n    COURSE_REQUIRED: 'COURSE_REQUIRED',\n\n    SESSION_CREATE: 'SESSION_CREATE',\n    SESSION_DESTROY: 'SESSION_DESTROY',\n\n    USER_CREATE: 'USER_CREATE',\n    USER_LOAD: 'USER_LOAD',\n    USER_MAX_PER_PAGE: 50,\n    USER_MASS_ENROLL: 'USER_MASS_ENROLL',\n    USER_MIN_ENROLL: 1,\n    USER_MAX_ENROLL: 5000,\n    USER_STUDENT_ENROLLMENT: 'StudentEnrollment',\n\n    // Status codes for mass user enrollment\n    USER_ENROLLMENT_COUNT_TOO_LOW: 'USER_ENROLLMENT_COUNT_TOO_LOW',\n    USER_ENROLLMENT_COUNT_TOO_HIGH: 'USER_ENROLLMENT_COUNT_TOO_HIGH',\n\n    USER_REGISTERING: 'USER_REGISTERING',\n    USER_ENROLLING: 'USER_ENROLLING',\n    USER_LOADING: 'USER_LOADING',\n\n    ACCOUNT_ACTIVATE: 'ACCOUNT_ACTIVATE',\n    COURSE_ACTIVATE: 'COURSE_ACTIVATE',\n\n    QUIZ_ACTIVATE: 'QUIZ_ACTIVATE',\n\n    RECIPE_ENROLL_STUDENTS: '/recipes/enroll_students',\n    RECIPE_ENROLL_STUDENTS_PROGRESS: '/recipes/enroll_students/progress',\n    RECIPE_LOAD_STUDENTS: '/recipes/load_students',\n    RECIPE_TAKE_QUIZ: '/recipes/take_quiz',\n\n    ROUTE_GO_TO_QUIZ: 'ROUTE_GO_TO_QUIZ',\n\n    QUIZ_TAKING_SET: 'QUIZ_TAKING_SET',\n    QUIZ_TAKING_SET_RESPONSE_RATIO: 'QUIZ_TAKING_SET_RESPONSE_RATIO',\n    QUIZ_TAKING_SET_RESPONSE_COUNT: 'QUIZ_TAKING_SET_RESPONSE_COUNT',\n    QUIZ_TAKING_RANDOMIZE_RESPONSE_RATIOS: 'QUIZ_TAKING_RANDOMIZE_RESPONSE_RATIOS',\n    QUIZ_TAKING_TAKE: 'QUIZ_TAKING_TAKE',\n    QUIZ_TAKING_ADD_ANSWER_TO_VARIANT: 'QUIZ_TAKING_ADD_ANSWER_TO_VARIANT',\n    QUIZ_TAKING_ADD_VARIANT: 'QUIZ_TAKING_ADD_VARIANT',\n    QUIZ_TAKING_REMOVE_VARIANT: 'QUIZ_TAKING_REMOVE_VARIANT',\n\n    QUIZ_TAKING_RESPONSE_COUNT_REQUIRED: 'QUIZ_TAKING_RESPONSE_COUNT_REQUIRED',\n    QUIZ_TAKING_NOT_ENOUGH_STUDENTS: 'QUIZ_TAKING_NOT_ENOUGH_STUDENTS',\n    QUIZ_TAKING_RESPONSE_GENERATION_FAILED: 'QUIZ_TAKING_RESPONSE_GENERATION_FAILED',\n\n    // Preparing the submission.\n    QUIZ_TAKING_PREPARING: 'QUIZ_TAKING_PREPARING',\n    QUIZ_TAKING_PREPARATION_FAILED: 'QUIZ_TAKING_PREPARATION_FAILED',\n\n    // Answering it using the QuizTaker.\n    QUIZ_TAKING_ANSWERING: 'QUIZ_TAKING_ANSWERING',\n    QUIZ_TAKING_ANSWERING_FAILED: 'QUIZ_TAKING_ANSWERING_FAILED',\n\n    // Turning it in.\n    QUIZ_TAKING_TURNING_IN: 'QUIZ_TAKING_TURNING_IN',\n    QUIZ_TAKING_TURNING_IN_FAILED: 'QUIZ_TAKING_TURNING_IN_FAILED',\n\n    QUIZ_TAKING_LOADING_STUDENTS: 'quizTakingStatusLoadingStudents',\n\n    FREE_FORM_INPUT_QUESTIONS: [\n      'fill_in_multiple_blanks_question',\n      'essay_question',\n      'short_answer_question',\n      'numerical_question',\n      'calculated_question',\n    ],\n\n    QUESTIONS_WITH_ANSWER_SETS: [\n      'fill_in_multiple_blanks_question',\n      'multiple_dropdowns_question',\n      // 'matching_question',\n    ],\n\n    QUESTIONS_WITH_VARIANTS: [\n      'multiple_answers_question',\n      'matching_question',\n    ],\n\n    MANUALLY_GRADED_QUESTIONS: [\n      'essay_question',\n      'file_upload_question'\n    ],\n\n    QUESTION_MISSING_ANSWER: 'none',\n    QUESTION_MISSING_ANSWER_TEXT: 'No Answer',\n    QUESTION_UNKNOWN_ANSWER: 'other',\n    QUESTION_UNKNOWN_ANSWER_TEXT: 'Something Else',\n    QUESTION_NUMERICAL_EXACT_ANSWER: 'exact_answer',\n    QUESTION_NUMERICAL_RANGE_ANSWER: 'range_answer',\n\n    DEFAULT_ID_PREFIX: 'quizard',\n    STUDENT_EMAIL_DOMAIN: 'quizard.com',\n    STUDENT_PASSWORD: 'quizard_student_password',\n\n    OPERATION_ACTIVE: 'OPERATION_ACTIVE',\n    OPERATION_ABORT: 'OPERATION_ABORT',\n    OPERATION_ABORTED: 'OPERATION_ABORTED',\n    OPERATION_FAILED: 'OPERATION_FAILED',\n    OPERATION_COMPLETE: 'OPERATION_COMPLETE',\n    OPERATION_BOX_MINIMIZE: 'OPERATION_BOX_MINIMIZE',\n    OPERATION_BOX_RESTORE: 'OPERATION_BOX_RESTORE',\n\n    SETTINGS_SAVE: 'SETTINGS_SAVE',\n  };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./constants.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"take_quiz.js"}